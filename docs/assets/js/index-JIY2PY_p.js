import{M as e,c as t,a,b as o,d as n,e as s,w as l,F as i,r,C as h,S as d,D as c,o as m,t as g,f as u,g as p,B as f,h as y,R as w,i as x,I as z,T as b,j as S,k as v,l as k,m as E,n as M,p as U,s as $}from"./vendor-D06FvzfI.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const a of e)if("childList"===a.type)for(const e of a.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const C={Yes:"确定",No:"取消",Settings:"设置","Countdown: mm:ss:SSS":"倒计时: mm:ss:SSS","Congratulations! You have successfully completed the challenge!":"恭喜你挑战成功!","The countdown has ended!":"倒计时结束!","Do you want to restart the challenge?":"是否重新开始挑战?",Up:"上",Refresh:"刷新",Left:"左",Down:"下",Right:"右","Right Top":"右上角","Left Down":"左下角",Center:"中间","Right Down":"右下角",Random:"随机","Night Mode":"夜间模式","Enable Night Mode?":"是否开启夜间模式",Language:"语言选择","Maze Generation Algorithm":"迷宫生成算法","Maze Size":"迷宫大小","The maze size must be an odd number, and the larger the number, the larger the maze that will be generated.":"迷宫大小必须为单数, 数字越大生成的迷宫就越大","Percentage of Dead Ends":"死路数量占比","Location of the Endpoint":"终点位置","Countdown Challenge":"倒计时挑战","Countdown Timer Limit":"倒计时时限","Player Icon":"玩家图标","Endpoint Icon":"终点图标","Icon for Reaching the Endpoint":"抵达终点图标","Wall Color":"墙壁颜色","Path Color":"路径颜色","Supports Filling in HTML Tags":"支持填写HTML标签","Settings Saved":"设置成功","Refresh Successful":"刷新成功"},T={class:"maze"},L={class:"maze-box"},R={key:0,class:"maze-time"},D={class:"maze-spin"},V={ref:"mazeCanvas"},A={class:"loadingTip"},N={class:"text"},P={class:"button"},_={class:"controls"},I={class:"shortcutKeys"};const O=((e,t)=>{const a=e.__vccOpts||e;for(const[o,n]of t)a[o]=n;return a})({data:()=>({now:0,show:!1,maze:[],width:"40%",start:!1,timing:!1,player:{x:1,y:1},loading:!1,hasReachedEnd:!1,countdownValue:0}),computed:{end(){const{rows:e,endLocation:t}=this.$store.mazeSetUp,a=Math.floor(e/2),o={center:{x:a,y:a},random:null,leftDown:{x:1,y:e-2},rightTop:{x:e-2,y:1},rightDown:{x:e-2,y:e-2}};if("random"===t){const e=[o.leftDown,o.rightTop,o.center,o.rightDown];o.random=e[Math.floor(Math.random()*e.length)]}const n=o[t];if(n){const e=this.maze.find((e=>e.x===n.x&&e.y===n.y));if(e)return e.wall=!1,n}},controls(){return[{key:"Q",type:"show",name:this.language("Settings")},{key:"W",type:"up",name:this.language("Up")},{key:"R",type:"refresh",name:this.language("Refresh")},{key:"A",type:"left",name:this.language("Left")},{key:"S",type:"down",name:this.language("Down")},{key:"D",type:"right",name:this.language("Right")}]},formData(){const e={algorithms:[{value:"Maze",label:"Maze"},{value:"Generation",label:"Generation"},{value:"Algorithm",label:"Algorithm"}],language:[{value:"zh-CN",label:"简体中文"},{value:"en-US",label:"English"}],endLocations:[{value:"rightTop",label:this.language("Right Top")},{value:"leftDown",label:this.language("Left Down")},{value:"center",label:this.language("Center")},{value:"rightDown",label:this.language("Right Down")},{value:"random",label:this.language("Random")}]};return[{field:"dark",label:this.language("Night Mode"),extra:"",component:"a-switch"},{field:"language",label:this.language("Language"),extra:"",options:e.language,component:"a-radio-group"},{field:"algorithm",label:this.language("Maze Generation Algorithm"),extra:"",options:e.algorithms,component:"a-radio-group"},{field:"rows",label:this.language("Maze Size"),extra:this.language("The maze size must be an odd number, and the larger the number, the larger the maze that will be generated."),props:{min:19},component:"a-input-number"},{field:"deadEnd",label:this.language("Percentage of Dead Ends"),extra:"",props:{max:100,min:10},component:"a-input-number"},{field:"endLocation",label:this.language("Location of the Endpoint"),extra:"",options:e.endLocations,component:"a-radio-group"},{field:"timing",label:this.language("Countdown Challenge"),extra:"",component:"a-switch"},{field:"time",label:this.language("Countdown Timer Limit"),extra:"",props:{min:1,placeholder:""},component:"a-input-number"},{field:"player",label:this.language("Player Icon"),extra:this.language("Supports Filling in HTML Tags"),component:"a-textarea"},{field:"end",label:this.language("Endpoint Icon"),extra:this.language("Supports Filling in HTML Tags"),component:"a-textarea"},{field:"arrival",label:this.language("Icon for Reaching the Endpoint"),extra:this.language("Supports Filling in HTML Tags"),component:"a-textarea"},{field:"wallColor",label:this.language("Wall Color"),extra:"",props:{showPreset:!0,showText:!0},component:"a-color-picker"},{field:"pathColor",label:this.language("Path Color"),extra:"",props:{showPreset:!0,showText:!0},component:"a-color-picker"}]},checkPathExists(){const e=this.end,t=this.$store.mazeSetUp.rows,a=[{x:1,y:1}],o=new Set,n=this.coordinateArray(1);for(;a.length>0;){const s=a.shift();if(s.x===e.x&&s.y===e.y)return!0;o.add(`${s.x}, ${s.y}`),n.forEach((e=>{const n={x:s.x+e.x,y:s.y+e.y};!(n.x>=0&&n.x<t&&n.y>=0&&n.y<t)||this.maze.find((e=>e.x===n.x&&e.y===n.y)).wall||o.has(`${n.x}, ${n.y}`)||a.push(n)}))}return!1}},mounted(){this.generateMaze(),this.renderingInitialization(window.innerWidth),window.addEventListener("keydown",this.move)},methods:{language(e){return"zh-CN"==this.$store.mazeSetUp.language?C[e]:e},timerEnds(){this.now=0,this.countdownValue=0,this.loading=!1,this.player={x:1,y:1},this.generateMaze()},renderingInitialization(e){const t=this.$store.mazeSetUp.rows,a=e>750?t:25;this.width=e>750?"40%":"100%",this.$store.mazeSetUp.rows=a,this.generateMaze()},saveSettings(){this.generateMaze(),this.show=!1,e.success(this.language("Settings Saved"))},generateMaze(){const{time:e,rows:t,dark:a,start:o,timing:n,algorithm:s}=this.$store.mazeSetUp;this.now=Date.now(),this.start=n,this.timing=n,this.player={x:1,y:1},this.hasReachedEnd=!1,this.countdownValue=this.now+6e4*e,this.$nextTick((()=>{const e=document.body;a?e.setAttribute("arco-theme","dark"):e.removeAttribute("arco-theme")})),this.maze=Array(t*t).fill().map(((e,a)=>({x:a%t,y:Math.floor(a/t),wall:!0}))),"Maze"==s?this.carveMaze(1,1):"Generation"==s?this.Generation():"Algorithm"==s&&this.Algorithm(1,1),this.maze.find((e=>1===e.x&&1===e.y)).wall=!1,this.maze.find((e=>e.x===this.end.x&&e.y===this.end.y)).wall=!1,this.createDeadEnds(),this.checkPathExists||this.generateMaze(),this.drawMaze()},drawMaze(){const e=this.$refs.mazeCanvas,t=e.getContext("2d"),a=15,{end:o,rows:n,player:s,arrival:l,wallColor:i,pathColor:r}=this.$store.mazeSetUp;e.width=n*a,e.height=n*a,this.maze.forEach((e=>{t.fillStyle=e.wall?i:r,t.fillRect(e.x*a,e.y*a,a,a)}));const h=this.maze.find((e=>e.x===this.end.x&&e.y===this.end.y));h&&!this.hasReachedEnd&&t.fillText(o,h.x*a+3.75,h.y*a+45/4);const d=this.maze.find((e=>e.x===this.player.x&&e.y===this.player.y));d&&t.fillText(s,d.x*a+3.75,d.y*a+45/4),this.hasReachedEnd&&t.fillText(l,d.x*a+3.75,d.y*a+45/4)},Algorithm(e,t){const a=this.coordinateArray(2);a.sort((()=>Math.random()-.5)),a.forEach((a=>{const o=e+a.x,n=t+a.y,s=this.$store.mazeSetUp.rows;if(o>0&&o<s-1&&n>0&&n<s-1){const s=this.maze.find((e=>e.x===o&&e.y===n));if(s&&s.wall){const l=e+a.x/2,i=t+a.y/2;this.maze.find((e=>e.x===l&&e.y===i)).wall=!1,s.wall=!1,this.Algorithm(o,n)}}}))},Generation(){const e=[],t={},a=this.$store.mazeSetUp.rows;for(let n=1;n<a;n+=2)for(let t=1;t<a;t+=2)n<a-2&&e.push({from:{x:n,y:t},to:{x:n+2,y:t}}),t<a-2&&e.push({from:{x:n,y:t},to:{x:n,y:t+2}});e.sort((()=>Math.random()-.5)),e.forEach((e=>{const a=`${e.from.x},${e.from.y}`,o=`${e.to.x},${e.to.y}`;t[a]=a,t[o]=o}));const o=e=>(t[e]!==e&&(t[e]=o(t[e])),t[e]);e.forEach((e=>{if(((e,a)=>{const n=o(e),s=o(a);return n!==s&&(t[n]=s,!0)})(`${e.from.x},${e.from.y}`,`${e.to.x},${e.to.y}`)){this.maze.find((t=>t.x===e.from.x&&t.y===e.from.y)).wall=!1,this.maze.find((t=>t.x===e.to.x&&t.y===e.to.y)).wall=!1;const t=(e.from.x+e.to.x)/2,a=(e.from.y+e.to.y)/2;this.maze.find((e=>e.x===t&&e.y===a)).wall=!1}}))},carveMaze(e,t){const a=this.maze.find((a=>a.x===e&&a.y===t));a&&(a.wall=!1);const o=this.coordinateArray(2);o.sort((()=>Math.random()-.5)),o.forEach((a=>{const o=e+a.x,n=t+a.y,s=this.$store.mazeSetUp.rows;if(o>0&&o<s-1&&n>0&&n<s-1){const s=this.maze.find((e=>e.x===o&&e.y===n));if(s&&s.wall){const s=e+a.x/2,l=t+a.y/2,i=this.maze.find((e=>e.x===s&&e.y===l));i&&(i.wall=!1),this.carveMaze(o,n)}}}))},createDeadEnds(){const e=this.maze.filter((e=>!e.wall)),t=Math.floor(e.length*(this.$store.mazeSetUp.deadEnd/100));for(let a=0;a<t;a++){const t=e[Math.floor(Math.random()*e.length)];1!==this.getNeighbors(t).filter((e=>!e.wall)).length||1===t.x&&1===t.y||t.x===this.end.x&&t.y===this.end.y||(this.maze.find((e=>e.x===t.x&&e.y===t.y)).wall=!0)}},move(t){const{x:a,y:o}=this.player,n=this.hasReachedEnd;let s=a,l=o;t="string"==typeof t?t:t.key;const i=this.$store.mazeSetUp.rows;switch(t){case"w":case"up":case"ArrowUp":o>0&&!n&&l--;break;case"s":case"down":case"ArrowDown":o<i-1&&!n&&l++;break;case"a":case"left":case"ArrowLeft":a>0&&!n&&s--;break;case"d":case"right":case"ArrowRight":a<i-1&&!n&&s++;break;case"q":case"show":return void(this.show=!this.show);case"r":case"refresh":return this.generateMaze(),void e.success(this.language("Refresh Successful"));default:return}this.maze.find((e=>e.x===s&&e.y===l)).wall||(this.player.x=s,this.player.y=l,this.hasReachedEnd=this.player.x===this.end.x&&this.player.y===this.end.y,this.drawMaze(),this.hasReachedEnd&&!this.loading&&(this.start=!1,this.loading=!0))},getNeighbors(e){const t=this.coordinateArray(1),a=[];return t.forEach((t=>{const o=e.x+t.x,n=e.y+t.y,s=this.$store.mazeSetUp.rows;if(o>=0&&o<s&&n>=0&&n<s){const e=this.maze.find((e=>e.x===o&&e.y===n));e.wall||a.push(e)}})),a},coordinateArray:e=>[{x:0,y:-e},{x:0,y:e},{x:-e,y:0},{x:e,y:0}]}},[["render",function(e,E,M,U,$,C){const O=h,G=f,F=d,H=y,Y=w,W=x,j=z,q=b,J=S,K=v,B=k,Q=c;return m(),t("div",T,[a("div",L,[$.timing?(m(),t("div",R,[(m(),o(O,{format:C.language("Countdown: mm:ss:SSS"),onFinish:E[0]||(E[0]=e=>$.loading=!0),start:$.start,key:$.now,value:$.countdownValue,now:$.now},null,8,["format","start","value","now"]))])):n("",!0),a("div",D,[s(F,{loading:$.loading,"hide-icon":""},{tip:l((()=>[a("div",A,[a("div",N,g($.hasReachedEnd?C.language("Congratulations! You have successfully completed the challenge!"):C.language("The countdown has ended!"))+" "+g(C.language("Do you want to restart the challenge?")),1),a("div",P,[s(G,{onClick:E[1]||(E[1]=e=>$.loading=!1)},{default:l((()=>[u(g(C.language("No")),1)])),_:1}),s(G,{onClick:C.timerEnds,type:"primary"},{default:l((()=>[u(g(C.language("Yes")),1)])),_:1},8,["onClick"])])])])),default:l((()=>[a("canvas",V,null,512)])),_:1},8,["loading"])]),a("div",_,[(m(!0),t(i,null,r(C.controls,((e,t)=>(m(),o(G,{class:"controls-button",key:t,onClick:t=>C.move(e.type)},{default:l((()=>[a("span",null,g(e.name),1),a("span",I,"("+g(e.key)+")",1)])),_:2},1032,["onClick"])))),128))]),s(Q,{width:$.width,title:C.language("Settings"),"ok-text":C.language("Yes"),"cancel-text":C.language("No"),visible:$.show,onOk:C.saveSettings,onCancel:E[2]||(E[2]=e=>$.show=!1)},{default:l((()=>[s(B,{model:e.$store.mazeSetUp,layout:"vertical"},{default:l((()=>[(m(!0),t(i,null,r(C.formData,(a=>(m(),o(K,{key:a.field,field:a.field,label:a.label,extra:a.extra},{default:l((()=>["a-switch"===a.component?(m(),o(H,{key:0,modelValue:e.$store.mazeSetUp[a.field],"onUpdate:modelValue":t=>e.$store.mazeSetUp[a.field]=t,type:"round"},null,8,["modelValue","onUpdate:modelValue"])):"a-radio-group"===a.component?(m(),o(W,{key:1,modelValue:e.$store.mazeSetUp[a.field],"onUpdate:modelValue":t=>e.$store.mazeSetUp[a.field]=t,type:"button"},{default:l((()=>[(m(!0),t(i,null,r(a.options,(e=>(m(),o(Y,{key:e.value,value:e.value},{default:l((()=>[u(g(e.label),1)])),_:2},1032,["value"])))),128))])),_:2},1032,["modelValue","onUpdate:modelValue"])):"a-input-number"===a.component?(m(),o(j,{key:2,modelValue:e.$store.mazeSetUp[a.field],"onUpdate:modelValue":t=>e.$store.mazeSetUp[a.field]=t,mode:"button",min:a.props.min,max:a.props.max},p({_:2},["deadEnd"==a.field?{name:"suffix",fn:l((()=>[E[3]||(E[3]=u("%"))])),key:"0"}:void 0]),1032,["modelValue","onUpdate:modelValue","min","max"])):"a-textarea"===a.component?(m(),o(q,{key:3,modelValue:e.$store.mazeSetUp[a.field],"onUpdate:modelValue":t=>e.$store.mazeSetUp[a.field]=t},null,8,["modelValue","onUpdate:modelValue"])):"a-color-picker"===a.component?(m(),o(J,{key:4,modelValue:e.$store.mazeSetUp[a.field],"onUpdate:modelValue":t=>e.$store.mazeSetUp[a.field]=t,"show-preset":"","show-text":""},null,8,["modelValue","onUpdate:modelValue"])):n("",!0)])),_:2},1032,["field","label","extra"])))),128))])),_:1},8,["model"])])),_:1},8,["width","title","ok-text","cancel-text","visible","onOk"])])])}],["__scopeId","data-v-379d786f"]]),G=E("main",{state:()=>({mazeSetUp:{end:"🚩",dark:!1,time:1,rows:41,timing:!1,player:"😃",arrival:"🥰",deadEnd:20,language:"zh-CN",algorithm:"Maze",wallColor:"#333333",pathColor:"#EEEEEE",endLocation:"random"}}),persist:{key:"vue-maze",paths:["mazeSetUp"],storage:localStorage,serializer:{serialize:e=>JSON.stringify(e),deserialize:e=>JSON.parse(e)}}}),F=M(O),H=U();H.use($),F.use(H);const Y=G();F.config.globalProperties.$store=Y,F.mount("#app");
